%{
open System
open QL_AST
open Microsoft.FSharp.Collections
%}

%token FORM
%token CB_OPEN CB_CLOSE
%token B_OPEN B_CLOSE
%token COLON

%token <string> IDENTIFIER
%token <string> LABEL

%token BOOL STRING INT DATE DECIMAL MONEY
%token EQ NE LT LE GT GE AND OR NOT PLUS MINUS MULT DIV

%token END

%start start
%type <QL_AST.questionaire> start

%%

start:
	FORM IDENTIFIER CB_OPEN
		stmtList
	CB_CLOSE END			{
								{	ID = $2;
									Questions = $4 }
							}

stmtList:
	|						{ [] }
	| stmt					{ [$1] }
	| stmt stmtList			{ $1 :: $2 }

stmt:
	| assignment	{ $1 }
	| question		{ $1 }
	| conditional	{ $1 }

assignment:
	IDENTIFIER COLON LABEL type B_OPEN expression B_CLOSE

question:
	IDENTIFIER COLON LABEL type

conditional:
	IF B_OPEN booleanExpr B_CLOSE CB_OPEN
		stmtList
	CB_CLOSE

type:
	| STRING			{...TODO...}
	| BOOL				{...TODO...}
	| arithmeticType	{ $1 }

arithmeticType:
	| INT				{...TODO...}
	| DATE				{...TODO...}
	| DECIMAL			{...TODO...}
	| MONEY				{...TODO...}

expression:
	| booleanExpr		{ $1 }
	| arithmeticExpr	{ $1 }

booleanExpr:
	| BOOL							{...TODO...}
	| NOT booleanExpr				{...TODO...}
	| booleanExpr AND booleanExpr	{...TODO...}
	| booleanExpr OR booleanExpr	{...TODO...}
	| booleanExpr LT booleanExpr	{...TODO...}
	| booleanExpr GT booleanExpr	{...TODO...}
	| booleanExpr LE booleanExpr	{...TODO...}
	| booleanExpr GE booleanExpr	{...TODO...}
	| booleanExpr EQ booleanExpr	{...TODO...}
	| booleanExpr NE booleanExpr	{...TODO...}

arithmeticExpr:
	| arithmeticType
	| arithmeticType PLUS arithmeticType	{...TODO...}
	| arithmeticType MINUS arithmeticType	{...TODO...}
	| arithmeticType MULT arithmeticType	{...TODO...}
	| arithmeticType DIV arithmeticType		{...TODO...}

